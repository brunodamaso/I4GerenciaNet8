<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="I4Kernel.Components.EntryView"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:I4Kernel.Components"
    x:Name="viewEntry">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="EntryView.Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>        
    </UserControl.Resources>

    <UserControl.Content>
        <Grid ToolTipService.ToolTip ="{x:Bind ToolTips}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" x:Name="ColumnTitle" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1"/>
                <RowDefinition Height="12"/>
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            
            <Interactivity:Interaction.Behaviors>
                
                <Interactions:DataTriggerBehavior Binding="{x:Bind IsValid, Mode=TwoWay}" Value="True">
                    <Interactions:GoToStateAction StateName="BlueState" />
                </Interactions:DataTriggerBehavior>
                <Interactions:DataTriggerBehavior Binding="{x:Bind IsValid, Mode=TwoWay}" Value="false">
                    <Interactions:GoToStateAction StateName="RedState" />
                </Interactions:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                    <VisualState x:Name="BlueState">
                        <Storyboard>                           
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EntryElement" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource  CupertinoTextBoxBorderBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Titulo" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource  CupertinoLabelBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorElement" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorElement" Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RedState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EntryElement" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CupertinoRedBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Titulo" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CupertinoRedBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorElement" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorElement" Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="5,0" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>                      
                    </VisualState>

                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            
            <TextBlock
                x:Name="Titulo"
                Grid.Column="0"
                Grid.Row="1"
                Grid.RowSpan="2"
                HorizontalTextAlignment="End"
                HorizontalAlignment="Stretch"
                VerticalAlignment ="Center"                
                Style="{StaticResource EntryView.Titulo.Normal}"
                Visibility="{x:Bind HasTitle,Converter ={StaticResource BooleanToVisibilityConverter}}"
                Padding="0,0,5,0"
            />

            <!--<Border x:Name="Borde"                    
                Grid.Column="1"
                Grid.Row="1"
                Grid.RowSpan="2"
                CornerRadius ="2"
                Padding="0"
                Background="{x:Bind Background}"   
                Style="{StaticResource EntryView.Border.Normal}"
        >-->

                <!--StrokeShape="RoundRectangle 4"
                    IsEnabled="{Binding IsEnabled}"
             -->

                <!--<Border.Triggers>
                <DataTrigger TargetType="Border" Binding="{Binding HasBorder ,Source={Reference viewEntry}}" Value="True">
                    <Setter Property="Margin" Value="5,10" />
                </DataTrigger>
                <DataTrigger TargetType="Border" Binding="{Binding HasBorder ,Source={Reference viewEntry}}" Value="False">
                    <Setter Property="Margin" Value="5,0" />
                </DataTrigger>
            </Border.Triggers>-->
                <Grid
                    Grid.Column="1"
                    Grid.Row="1"
                    Grid.RowSpan="2"
                >
                    
                <TextBox x:Name="EntryElement"
                    PlaceholderText="{x:Bind Placeholder, Mode=TwoWay}"
                    Text="{x:Bind Text, Mode=TwoWay}"
                    AcceptsReturn="{x:Bind IsEditBox}"
                    Height="{x:Bind HeightEditBox}"    
                    FontSize="{x:Bind FontSize}"
                    Foreground="{x:Bind Foreground}"
                    GotFocus="EntryElement_GotFocus"
                    LostFocus="EntryElement_LostFocus"
                    VerticalContentAlignment="Top"
                    Style="{StaticResource CupertinoTextBoxStyle}" 
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    Margin="0" 
                    Padding ="10,10,10,0"
                    IsReadOnly="{x:Bind IsReadOnly}"
                >
                   

                    <!--
                    ReturnType="Done"
            Keyboard="{Binding Keyboard, Source={Reference viewEntry}}"
            TextTransform="{Binding TextTransform, Source={Reference viewEntry}}"
            Unfocused="EntryElement_Unfocused"
            -->

                   
                    <!--<toolkit:EventToCommandBehavior
                                EventName="Unfocused" 
                                Command="{Binding ReturnCommand, Source={Reference viewEntry}}" />
                </TextBox.Behaviors> -->
                    
                </TextBox>
                <PasswordBox  x:Name="EntryPassword"
                    Visibility="Collapsed"     
                    PlaceholderText="{x:Bind Placeholder, Mode=TwoWay}"
                    Password="{x:Bind Text, Mode=TwoWay}"
                    FontSize="{x:Bind FontSize}"
                    Style="{StaticResource CupertinoPasswordBoxStyle}"
                    Foreground="{x:Bind Foreground}"
                    GotFocus="EntryElement_GotFocus"
                    LostFocus="EntryElement_LostFocus"
                    VerticalContentAlignment="Top"         
                    VerticalAlignment ="Stretch"
                    Margin="0" 
                />

                </Grid>
            <Border x:Name ="Header" 
                  Background ="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                  Grid.Column="1" 
                  Grid.Row="0" 
                  Grid.RowSpan="2" 
                  HorizontalAlignment="Left"
                  Margin="10,-9,10,0"
                  VerticalAlignment="Top"                
                  Visibility ="Collapsed"
                >
                <!--<TextBlock x:Name="PlaceholderElement"
                    HorizontalAlignment="Start"
                    Margin="15,0"
                    Padding="5,1"
                    Visibility="{Binding HasBorder ,Source={Reference viewEntry} , Converter={toolkit:InvertedBoolConverter}}"
                    FontSize="11"
                    Text="{Binding Placeholder,Source={Reference viewEntry}}"
                    >
                    <TextBlock.Background>
                        <LinearGradientBrush EndPoint="0,1">
                            <GradientStop Color="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
                          Offset="0.2" />
                            <GradientStop Color="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </TextBlock.Background>
                </TextBlock>-->

                <TextBlock x:Name="ErrorElement"
                    HorizontalAlignment="Left"
                    Margin="0"
                    Visibility="Collapsed"
                    Foreground ="{ThemeResource CupertinoRedBrush}"
                    Style ="{StaticResource CupertinoPrimaryCaption}"
                    Text="{x:Bind ErrorText}"/>

            </Border>
        </Grid>
    </UserControl.Content>
</UserControl>
